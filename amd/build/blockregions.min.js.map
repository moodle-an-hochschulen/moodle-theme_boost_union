{"version":3,"file":"blockregions.min.js","sources":["../src/blockregions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - JS code for manage block regions alignments.\n *\n * @module     theme_boost_union/blockregions\n * @copyright  2025 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function() {\n\n    const SELECTORS = {\n        outsideLeft: '#theme-block-region-outside-left',\n        outsideRight: '#theme-block-region-outside-right',\n        mainContent: '#page-content',\n        courseContent: '#page-content .course-content',\n        upperRegion: '#theme-block-region-content-upper',\n        placeholderRegion: '.outside-region-placeholder',\n        mainInner: '.main-inner-wrapper',\n        mainPage: '#page',\n    };\n\n    return {\n\n        OutsideRegionsVerticalAlignment: function() {\n\n            /**\n             * If the outside regions vertical alignment is enabled, Invisible class added on the outside regions.\n             * Need to remove the class to show the outside regions.\n             */\n            const showOutsideRegions = function() {\n                const outsideLeft = document.querySelector(SELECTORS.outsideLeft);\n                const outsideRight = document.querySelector(SELECTORS.outsideRight);\n\n                if (outsideLeft !== null) {\n                    outsideLeft.classList.remove('invisible');\n                }\n\n                if (outsideRight !== null) {\n                    outsideRight.classList.remove('invisible');\n                }\n            };\n\n            const updateOutsideRegionsAlignment = function() {\n\n                const outsideLeft = document.querySelector(SELECTORS.outsideLeft);\n                const outsideRight = document.querySelector(SELECTORS.outsideRight);\n                const mainPage = document.querySelector(SELECTORS.mainInner) || document.querySelector(SELECTORS.mainPage);\n\n                // Use the upper region add block div as main content if turn editing on.\n                // Use the course content div as main content if it exists, otherwise use the page content div.\n                const mainContent = document.querySelector(SELECTORS.upperRegion) ||\n                    document.querySelector(SELECTORS.courseContent) || document.querySelector(SELECTORS.mainContent);\n\n                if (mainContent === null) {\n                    return;\n                }\n\n                // Find the sizes of the outside regions and the main page.\n                const outsideLeftWidth = outsideLeft ? outsideLeft.offsetWidth : 0; // Left region width.\n                const outsideRightWidth = outsideRight ? outsideRight.offsetWidth : 0; // Right region width.\n                const mainContentWidth = mainContent.offsetWidth; // Main content width.\n                const mainPageWidth = mainPage ? mainPage.offsetWidth : 0; // Main inner wrapper width.\n\n                var mainContentTop = mainContent.getBoundingClientRect().top;\n\n                if (outsideLeft !== null && mainPageWidth >= outsideLeftWidth + mainContentWidth) {\n                    // Find the difference between left region offset top and main content offset top.\n                    // Assign the difference to the height of the placeholder region.\n                    const leftRegionTop = outsideLeft.getBoundingClientRect().top;\n                    const offsetTop = mainContentTop - leftRegionTop;\n                    const leftPlaceholder = outsideLeft.querySelector(SELECTORS.placeholderRegion);\n                    if (leftPlaceholder !== null) {\n                        // Confirm the left region is inline with the main content.\n                        const isLeftRegionInline = (mainPageWidth >= outsideLeftWidth + mainContentWidth);\n                        leftPlaceholder.style.height = isLeftRegionInline ? offsetTop + 'px' : 0;\n                    }\n                }\n\n                if (outsideRight !== null) {\n\n                    // Find the difference between right region offset top and main content offset top.\n                    // Assign the difference to the height of the placeholder region.\n                    const rightRegionTop = outsideRight.getBoundingClientRect().top;\n                    const offsetTop = mainContentTop - rightRegionTop;\n                    const rightPlaceholder = outsideRight.querySelector(SELECTORS.placeholderRegion);\n                    if (rightPlaceholder !== null) {\n                        // Confirm the Right region is inline with the main content.\n                        const isRightRegionInline = mainPageWidth >= (outsideRightWidth + mainContentWidth + outsideLeftWidth);\n                        rightPlaceholder.style.height = isRightRegionInline ? offsetTop + 'px' : 0;\n                    }\n                }\n            };\n\n            window.addEventListener('resize', updateOutsideRegionsAlignment);\n            updateOutsideRegionsAlignment();\n            showOutsideRegions();\n        }\n    };\n\n});\n"],"names":["define","SELECTORS","OutsideRegionsVerticalAlignment","updateOutsideRegionsAlignment","outsideLeft","document","querySelector","outsideRight","mainPage","mainContent","outsideLeftWidth","offsetWidth","outsideRightWidth","mainContentWidth","mainPageWidth","mainContentTop","getBoundingClientRect","top","offsetTop","leftPlaceholder","isLeftRegionInline","style","height","rightPlaceholder","isRightRegionInline","window","addEventListener","classList","remove","showOutsideRegions"],"mappings":";;;;;;;AAuBAA,wCAAO,IAAI,iBAEDC,sBACW,mCADXA,uBAEY,oCAFZA,sBAGW,gBAHXA,wBAIa,gCAJbA,sBAKW,oCALXA,4BAMiB,8BANjBA,oBAOS,sBAPTA,mBAQQ,cAGP,CAEHC,gCAAiC,iBAmBvBC,8BAAgC,iBAE5BC,YAAcC,SAASC,cAAcL,uBACrCM,aAAeF,SAASC,cAAcL,wBACtCO,SAAWH,SAASC,cAAcL,sBAAwBI,SAASC,cAAcL,oBAIjFQ,YAAcJ,SAASC,cAAcL,wBACvCI,SAASC,cAAcL,0BAA4BI,SAASC,cAAcL,0BAE1D,OAAhBQ,yBAKEC,iBAAmBN,YAAcA,YAAYO,YAAc,EAC3DC,kBAAoBL,aAAeA,aAAaI,YAAc,EAC9DE,iBAAmBJ,YAAYE,YAC/BG,cAAgBN,SAAWA,SAASG,YAAc,MAEpDI,eAAiBN,YAAYO,wBAAwBC,OAErC,OAAhBb,aAAwBU,eAAiBJ,iBAAmBG,iBAAkB,OAIxEK,UAAYH,eADIX,YAAYY,wBAAwBC,IAEpDE,gBAAkBf,YAAYE,cAAcL,gCAC1B,OAApBkB,gBAA0B,OAEpBC,mBAAsBN,eAAiBJ,iBAAmBG,iBAChEM,gBAAgBE,MAAMC,OAASF,mBAAqBF,UAAY,KAAO,MAI1D,OAAjBX,aAAuB,OAKjBW,UAAYH,eADKR,aAAaS,wBAAwBC,IAEtDM,iBAAmBhB,aAAaD,cAAcL,gCAC3B,OAArBsB,iBAA2B,OAErBC,oBAAsBV,eAAkBF,kBAAoBC,iBAAmBH,iBACrFa,iBAAiBF,MAAMC,OAASE,oBAAsBN,UAAY,KAAO,KAKrFO,OAAOC,iBAAiB,SAAUvB,+BAClCA,gCAjE2B,iBACjBC,YAAcC,SAASC,cAAcL,uBACrCM,aAAeF,SAASC,cAAcL,wBAExB,OAAhBG,aACAA,YAAYuB,UAAUC,OAAO,aAGZ,OAAjBrB,cACAA,aAAaoB,UAAUC,OAAO,aAyDtCC"}