{"version":3,"file":"smartmenu.min.js","sources":["../src/smartmenu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Theme Boost Union - JS for smart menu to realize the third level submenu support.\r\n *\r\n * @module     theme_boost_union/smartmenu\r\n * @copyright  2023 bdecent GmbH <https://bdecent.de>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([\"jquery\", \"core/moremenu\"], function($) {\r\n    /**\r\n     * Implement the second level of submenu support.\r\n     * Find the submenus inside the dropdown, add an event listener for click event which - on the click - shows the submenu list.\r\n     */\r\n    const addSubmenu = () => {\r\n        // Fetch the list of submenus from moremenu.\r\n        var submenu = document.querySelectorAll('nav.moremenu .dropdown-submenu');\r\n        if (submenu !== null) {\r\n            submenu.forEach((item) => {\r\n                // Add event listener to show the submenu on click.\r\n                item.addEventListener('click', (e) => {\r\n                    var target = e.currentTarget;\r\n                    // Hide the shown menu.\r\n                    hideSubmenus(target);\r\n                    target.classList.toggle('show');\r\n                    // Prevent hiding the parent menu.\r\n                    e.stopPropagation();\r\n                });\r\n            });\r\n        }\r\n\r\n        // Hide the submenus when its parent dropdown is hidden.\r\n        $(document).on('hidden.bs.dropdown', e => {\r\n            var target = e.relatedTarget.parentNode;\r\n            var submenus = target.querySelectorAll('.dropdown-submenu.show');\r\n            if (submenus !== null) {\r\n                submenus.forEach((e) => e.classList.remove('show'));\r\n            }\r\n        });\r\n\r\n        // Provide the third level menu support inside the more menu.\r\n        // StopPropagation used in the toggledropdown method on Moremenu.js, It prevents the opening of the third level menus.\r\n        // Used the document delegation method to fetch the click on moremenu and submenu.\r\n        document.addEventListener('click', (e) => {\r\n            var dropdown = e.target.closest('.dropdownmoremenu');\r\n            var subMenu = e.target.closest('.dropdown-submenu');\r\n            if (dropdown && subMenu !== null) {\r\n                // Hide the previously opend submenus. before open the new one.\r\n                dropdown.querySelectorAll('.dropdown-submenu.show').forEach((menu) => {\r\n                    menu.classList.remove('show');\r\n                });\r\n                subMenu.classList.toggle('show');\r\n            }\r\n\r\n            // Hide the opened menus before open the other menus.\r\n            var dropdownMenu = e.target.parentNode.classList.contains('dropdown');\r\n            if (dropdown && dropdownMenu) {\r\n                dropdown.querySelectorAll('.dropdown-menu.show').forEach((menu) => {\r\n                    // Hide the opened menus in more menu.\r\n                    if (menu != e.target.closest('.dropdown-menu')) {\r\n                        menu.classList.remove('show');\r\n                    }\r\n                });\r\n            }\r\n\r\n        }, true);\r\n\r\n        // Prevent the closing of dropdown during the click on help icon.\r\n        var helpIcon = document.querySelectorAll('.moremenu .dropdown .menu-helpicon');\r\n        if (helpIcon !== null) {\r\n            helpIcon.forEach((icon) => {\r\n                icon.addEventListener('click', (e) => {\r\n                    e.stopPropagation();\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Hide visible submenus before display new submenu.\r\n     *\r\n     * @param {Selector} target\r\n     */\r\n    const hideSubmenus = (target) => {\r\n        var visibleMenu = document.querySelectorAll('nav.moremenu .dropdown-submenu.show');\r\n        if (visibleMenu !== null) {\r\n            visibleMenu.forEach((el) => {\r\n                if (el != target) {\r\n                    el.classList.remove('show');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the no wrapped card menus scroll using swipe or drag.\r\n     */\r\n    const cardScroll = () => {\r\n        var cards = document.querySelectorAll('.card-dropdown.card-overflow-no-wrap');\r\n        if (cards !== null) {\r\n            var scrollStart; // Verify the mouse is clicked and still in click not released.\r\n            var scrollMoved; // Prevent the click on scrolling.\r\n            let startPos, scrollPos;\r\n\r\n            cards.forEach((card) => {\r\n                var scrollElement = card.querySelector('.dropdown-menu');\r\n\r\n                scrollElement.addEventListener('mousedown', (e) => {\r\n                    scrollStart = true;\r\n                    var target = e.currentTarget.querySelector('.card-block-wrapper');\r\n                    startPos = e.pageX;\r\n                    scrollPos = target.scrollLeft;\r\n                });\r\n\r\n                scrollElement.addEventListener('mousemove', (e) => {\r\n                    e.preventDefault();\r\n                    if (!scrollStart) {\r\n                        return;\r\n                    }\r\n                    scrollMoved = true;\r\n                    var target = e.currentTarget.querySelector('.card-block-wrapper');\r\n                    const scroll = e.pageX - startPos;\r\n                    target.scrollLeft = scrollPos - scroll;\r\n                });\r\n\r\n                scrollElement.addEventListener('click', (e) => {\r\n                    if (scrollMoved) {\r\n                        e.preventDefault();\r\n                        scrollMoved = false;\r\n                    }\r\n                    e.stopPropagation();\r\n                });\r\n                scrollElement.addEventListener('mouseleave', () => {\r\n                    scrollStart = false;\r\n                    scrollMoved = false;\r\n                });\r\n                scrollElement.addEventListener('mouseup', () => {\r\n                    scrollStart = false;\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Move the menubar and primary navigation menu items from more menu.\r\n     */\r\n    const autoCollapse = () => {\r\n        var primaryNav = document.querySelector('.primary-navigation ul.more-nav');\r\n        moveOutMoreMenu(primaryNav);\r\n\r\n        var menuBar = document.querySelector('nav.menubar ul.more-nav');\r\n        moveOutMoreMenu(menuBar);\r\n    };\r\n\r\n    /**\r\n     * Move the items from more menu, items which is set to force outside more menu.\r\n     * Remove those items from more menu and insert the menu before the last normal item.\r\n     * Find the length and children's length to insert the out menus in that positions.\r\n     * Rerun the more menu it will more the other normal menus into more menu to fix the alignmenu issue.\r\n     *\r\n     * @param {HTMLElement} navMenu The navbar container.\r\n     */\r\n    const moveOutMoreMenu = (navMenu) => {\r\n\r\n        if (navMenu === null) {\r\n            return;\r\n        }\r\n\r\n        var outMenus = navMenu.querySelectorAll('.dropdownmoremenu .force-menu-out');\r\n        var menuslist = [];\r\n\r\n        if (outMenus === null) {\r\n            return;\r\n        }\r\n\r\n        outMenus.forEach((menu) => {\r\n            menu.querySelector('a').classList.remove('dropdown-item');\r\n            menu.querySelector('a').classList.add('nav-link');\r\n\r\n            menuslist.push(menu);\r\n            menu.parentNode.removeChild(menu);\r\n        });\r\n        // Find the length and children's length to insert the out menus in that positions.\r\n        var length = menuslist.length;\r\n        var navLength = navMenu.children.length - 1; // Remove more menu.\r\n        var newPosition = navLength - length || 0;\r\n        // Insert the stored menus before the more menu.\r\n        menuslist.forEach((menu) => navMenu.insertBefore(menu, navMenu.children[newPosition]));\r\n        window.dispatchEvent(new Event('resize')); // Dispatch the resize event to create more menu.\r\n    };\r\n\r\n    return {\r\n        init: () => {\r\n            addSubmenu();\r\n            cardScroll();\r\n            autoCollapse();\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","hideSubmenus","target","visibleMenu","document","querySelectorAll","forEach","el","classList","remove","moveOutMoreMenu","navMenu","outMenus","menuslist","menu","querySelector","add","push","parentNode","removeChild","length","newPosition","children","insertBefore","window","dispatchEvent","Event","init","submenu","item","addEventListener","e","currentTarget","toggle","stopPropagation","on","submenus","relatedTarget","dropdown","closest","subMenu","dropdownMenu","contains","helpIcon","icon","addSubmenu","cards","scrollStart","scrollMoved","startPos","scrollPos","card","scrollElement","pageX","scrollLeft","preventDefault","scroll","cardScroll","primaryNav","menuBar","autoCollapse"],"mappings":";;;;;;;AAuBAA,qCAAO,CAAC,SAAU,kBAAkB,SAASC,SA0EnCC,aAAgBC,aACdC,YAAcC,SAASC,iBAAiB,uCACxB,OAAhBF,aACAA,YAAYG,SAASC,KACbA,IAAML,QACNK,GAAGC,UAAUC,OAAO,YA0E9BC,gBAAmBC,aAEL,OAAZA,aAIAC,SAAWD,QAAQN,iBAAiB,qCACpCQ,UAAY,MAEC,OAAbD,UAIJA,SAASN,SAASQ,OACdA,KAAKC,cAAc,KAAKP,UAAUC,OAAO,iBACzCK,KAAKC,cAAc,KAAKP,UAAUQ,IAAI,YAEtCH,UAAUI,KAAKH,MACfA,KAAKI,WAAWC,YAAYL,aAG5BM,OAASP,UAAUO,OAEnBC,YADYV,QAAQW,SAASF,OAAS,EACZA,QAAU,EAExCP,UAAUP,SAASQ,MAASH,QAAQY,aAAaT,KAAMH,QAAQW,SAASD,gBACxEG,OAAOC,cAAc,IAAIC,MAAM,oBAG5B,CACHC,KAAM,KAlLS,UAEXC,QAAUxB,SAASC,iBAAiB,kCACxB,OAAZuB,SACAA,QAAQtB,SAASuB,OAEbA,KAAKC,iBAAiB,SAAUC,QACxB7B,OAAS6B,EAAEC,cAEf/B,aAAaC,QACbA,OAAOM,UAAUyB,OAAO,QAExBF,EAAEG,wBAMdlC,EAAEI,UAAU+B,GAAG,sBAAsBJ,QAE7BK,SADSL,EAAEM,cAAcnB,WACPb,iBAAiB,0BACtB,OAAb+B,UACAA,SAAS9B,SAASyB,GAAMA,EAAEvB,UAAUC,OAAO,aAOnDL,SAAS0B,iBAAiB,SAAUC,QAC5BO,SAAWP,EAAE7B,OAAOqC,QAAQ,qBAC5BC,QAAUT,EAAE7B,OAAOqC,QAAQ,qBAC3BD,UAAwB,OAAZE,UAEZF,SAASjC,iBAAiB,0BAA0BC,SAASQ,OACzDA,KAAKN,UAAUC,OAAO,WAE1B+B,QAAQhC,UAAUyB,OAAO,aAIzBQ,aAAeV,EAAE7B,OAAOgB,WAAWV,UAAUkC,SAAS,YACtDJ,UAAYG,cACZH,SAASjC,iBAAiB,uBAAuBC,SAASQ,OAElDA,MAAQiB,EAAE7B,OAAOqC,QAAQ,mBACzBzB,KAAKN,UAAUC,OAAO,cAKnC,OAGCkC,SAAWvC,SAASC,iBAAiB,sCACxB,OAAbsC,UACAA,SAASrC,SAASsC,OACdA,KAAKd,iBAAiB,SAAUC,IAC5BA,EAAEG,yBAyHVW,GAhGW,UACXC,MAAQ1C,SAASC,iBAAiB,2CACxB,OAAVyC,MAAgB,KACZC,YACAC,gBACAC,SAAUC,UAEdJ,MAAMxC,SAAS6C,WACPC,cAAgBD,KAAKpC,cAAc,kBAEvCqC,cAActB,iBAAiB,aAAcC,IACzCgB,aAAc,MACV7C,OAAS6B,EAAEC,cAAcjB,cAAc,uBAC3CkC,SAAWlB,EAAEsB,MACbH,UAAYhD,OAAOoD,cAGvBF,cAActB,iBAAiB,aAAcC,OACzCA,EAAEwB,kBACGR,mBAGLC,aAAc,MACV9C,OAAS6B,EAAEC,cAAcjB,cAAc,6BACrCyC,OAASzB,EAAEsB,MAAQJ,SACzB/C,OAAOoD,WAAaJ,UAAYM,UAGpCJ,cAActB,iBAAiB,SAAUC,IACjCiB,cACAjB,EAAEwB,iBACFP,aAAc,GAElBjB,EAAEG,qBAENkB,cAActB,iBAAiB,cAAc,KACzCiB,aAAc,EACdC,aAAc,KAElBI,cAActB,iBAAiB,WAAW,KACtCiB,aAAc,UAyDtBU,GAhDa,UACbC,WAAatD,SAASW,cAAc,mCACxCL,gBAAgBgD,gBAEZC,QAAUvD,SAASW,cAAc,2BACrCL,gBAAgBiD,UA4CZC"}