{"version":3,"file":"infobanner.min.js","sources":["../src/infobanner.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - JS code for feature information banner\n *\n * @module     theme_boost_union/infobanner\n * @copyright  2022 Luca BÃ¶sch, BFH Bern University of Applied Sciences luca.boesch@bfh.ch\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/notification'],\n    function($, str, ModalFactory, ModalEvents, Notification) {\n        \"use strict\";\n\n        /**\n         * Initialising.\n         *\n         * @param {string} showconfirmationdialogue\n         */\n        function initInfoBanner(showconfirmationdialogue) {\n\n            var stringsforInfoBannerJS = [\n                {\n                    key: 'confirmation',\n                    component: 'theme_boost_union'\n                }, {\n                    key: 'closingperpetualinfobanner',\n                    component: 'theme_boost_union'\n                }, {\n                    key: 'yes_close',\n                    component: 'theme_boost_union'\n                }\n            ];\n\n            // Load the strings and modal before clicking on the button so that the confirmation dialogue can pop up faster.\n            var stringsPromise = str.get_strings(stringsforInfoBannerJS);\n            var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\n\n            // With this we store the dismissing of the info banner as a user preference to persist this decision.\n            $('#themeboostunionperpinfobanner .close').click(function(event) {\n                // Stop propagation to keep the info banner there until the decision in the confirmation dialogue has been made.\n                event.stopPropagation();\n\n                if (showconfirmationdialogue == '1') {\n                    $.when(stringsPromise, modalPromise).then(function(strings, modal) {\n                        modal.setTitle(strings[0]);\n                        modal.setBody(strings[1]);\n                        modal.setSaveButtonText(strings[2]);\n                        // Saved clicked - the dismissing of the info banner is confirmed.\n                        modal.getRoot().on(ModalEvents.save, function() {\n                            M.util.set_user_preference('theme_boost_union_infobanner_dismissed', true);\n                            // Now close the alert.\n                            $('#themeboostunionperpinfobanner').alert('close');\n                        });\n                        modal.show();\n                        return modal;\n                    }).fail(Notification.exception);\n                } else {\n                    M.util.set_user_preference('theme_boost_union_infobanner_dismissed', true);\n                    // Now close the alert.\n                    $('#themeboostunionperpinfobanner').alert('close');\n                }\n            });\n        }\n\n        return {\n            init: function(showconfirmationdialogue) {\n                initInfoBanner(showconfirmationdialogue);\n            }\n        };\n    });\n"],"names":["define","$","str","ModalFactory","ModalEvents","Notification","init","showconfirmationdialogue","stringsPromise","get_strings","key","component","modalPromise","create","type","types","SAVE_CANCEL","click","event","stopPropagation","when","then","strings","modal","setTitle","setBody","setSaveButtonText","getRoot","on","save","M","util","set_user_preference","alert","show","fail","exception","initInfoBanner"],"mappings":";;;;;;;AAuBAA,sCAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,sBACrE,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,oBAsDjC,CACHC,KAAM,SAASC,oCA/CKA,8BAgBhBC,eAAiBN,IAAIO,YAdI,CACzB,CACIC,IAAK,eACLC,UAAW,qBACZ,CACCD,IAAK,6BACLC,UAAW,qBACZ,CACCD,IAAK,YACLC,UAAW,uBAMfC,aAAeT,aAAaU,OAAO,CAACC,KAAMX,aAAaY,MAAMC,cAGjEf,EAAE,yCAAyCgB,OAAM,SAASC,OAEtDA,MAAMC,kBAE0B,KAA5BZ,yBACAN,EAAEmB,KAAKZ,eAAgBI,cAAcS,MAAK,SAASC,QAASC,cACxDA,MAAMC,SAASF,QAAQ,IACvBC,MAAME,QAAQH,QAAQ,IACtBC,MAAMG,kBAAkBJ,QAAQ,IAEhCC,MAAMI,UAAUC,GAAGxB,YAAYyB,MAAM,WACjCC,EAAEC,KAAKC,oBAAoB,0CAA0C,GAErE/B,EAAE,kCAAkCgC,MAAM,YAE9CV,MAAMW,OACCX,SACRY,KAAK9B,aAAa+B,YAErBN,EAAEC,KAAKC,oBAAoB,0CAA0C,GAErE/B,EAAE,kCAAkCgC,MAAM,aAO9CI,CAAe9B"}