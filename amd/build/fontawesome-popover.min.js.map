{"version":3,"file":"fontawesome-popover.min.js","sources":["../src/fontawesome-popover.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - JS code which shows all fontawesome icons in a popover.\n *\n * @module     theme_boost_union/fontawesome-popover\n * @copyright  2023 bdecent GmbH <https://bdecent.de>\n * @copyright  based on code from theme_boost\\footer-popover by Bas Brands.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'theme_boost/popover', 'core/fragment', 'core/notification'], function($, popover, Fragment, Notification) {\n\n    const SELECTORS = {\n        PICKERCONTAINER: '.fontawesome-iconpicker-popover',\n        PICKERCONTENT: '[data-region=\"icons-list\"]',\n    };\n\n    var contextID;\n\n    let pickerIsShown = false;\n\n    var SELECTBOX;\n\n    /**\n     * Get the icon list for popover.\n     *\n     * @returns {String} HTML string\n     * @private\n     */\n    const getIconList = () => {\n        return Fragment.loadFragment('theme_boost_union', 'icons_list', contextID, {});\n    };\n\n    /**\n     * Filter the icons in the list with values which the user entered in the search input.\n     * Given input will contain the text in both data-value and data-label.\n     * Ex. \"core:t\\document\" is data-value and \"fa-document\" is data-label.\n     *\n     * @param {Element} target\n     */\n    const filterIcons = (target) => {\n        var filter = target.value.toLowerCase();\n        SELECTBOX.value = filter || 0;\n        var ul = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions');\n        if (ul === undefined || ul === null) {\n            return;\n        }\n        var li = ul.querySelectorAll('li');\n\n        for (var i = 0; i < li.length; i++) {\n            var value = li[i].getAttribute('data-value');\n            var label = li[i].getAttribute('data-label');\n            if (!value.toLowerCase().includes(filter) && !label.toLowerCase().includes(filter)) {\n                li[i].style.display = \"none\";\n            } else {\n                li[i].style.display = \"inline-block\";\n            }\n        }\n    };\n\n    /**\n     * Creates input element and append the element into the target element's parent node.\n     * User is able to search icons using this input field.\n     *\n     * @param {String} target Element Selector.\n     */\n    const createElements = (target) => {\n\n        var input = document.createElement('input');\n        input.setAttribute('type', 'text');\n        input.classList.add('fontawesome-autocomplete');\n        input.classList.add('form-control');\n        input.setAttribute('name', 'iconsearch');\n\n        if (SELECTBOX.value != '') {\n            input.value = SELECTBOX.querySelector('option[selected]') !== null\n                ? SELECTBOX.querySelector('option[selected]').text : '';\n        }\n\n        var wrapper = document.createElement('div');\n        wrapper.classList.add(\"fontawesome-picker-container\");\n        wrapper.append(input);\n\n        document.querySelector(target).style.display = 'none';\n        document.querySelector(target).parentNode.append(wrapper);\n    };\n\n    /**\n     * Update the target with fontawesome iconpicker.\n     *\n     * Create picker input field for search icons insert to DOM, fetch the icons list and setup the popover with icons content.\n     * Display the popover when the icon search input field is focused or clicked. This way user can view the list of icons and\n     * search icons. When the icon is selected, same icon in the select element will be selected.\n     *\n     * @param {String} target Element Selector.\n     */\n    const iconPicker = (target) => {\n\n        SELECTBOX = document.querySelector(target);\n\n        if (SELECTBOX === undefined || SELECTBOX === null) {\n            return;\n        }\n\n        // Create input element and insert for search icons and hide the current target select box.\n        createElements(target);\n\n        // Parent of the target element.\n        var selectBoxParent = document.querySelector(target).parentNode;\n\n        // Input element for search icons, appended in createElements method.\n        const pickerInput = selectBoxParent.querySelector(\"input.fontawesome-autocomplete\");\n\n        // Check the search input created and inserted in DOM.\n        if (pickerInput === undefined || pickerInput === null) {\n            setTimeout(() => iconPicker(target), 1000);\n            return;\n        }\n\n        // Fetch the icons list and setup popover with icons list.\n        getIconList().then(function(html) {\n\n            $(pickerInput).popover({\n                content: html,\n                html: true,\n                placement: 'bottom',\n                customClass: 'fontawesome-picker',\n                trigger: 'click',\n                sanitize: false\n            });\n\n            // Event observer when the popover is inserted in DOM, create event listner for each icon in icons list.\n            // Icon is clicked, set the icon data-value as value for select box.\n            // Set the icon label to value of autocomplete picker.\n            $(pickerInput).on('inserted.bs.popover', function() {\n                var ul = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions');\n                ul.querySelectorAll('li').forEach((li) => {\n                    li.addEventListener('click', (e) => {\n                        var target = e.target.closest('li');\n                        var value = target.getAttribute('data-value');\n                        var label = target.getAttribute('data-label');\n                        pickerInput.value = label;\n                        SELECTBOX.value = value || 0;\n                        $(pickerInput).popover('hide');\n                    });\n                });\n            });\n            return;\n        }).catch(Notification.exception);\n\n        document.addEventListener('click', e => {\n            if (pickerIsShown && !e.target.closest(SELECTORS.PICKERCONTAINER)) {\n                $(pickerInput).popover('hide');\n            }\n        },\n        true);\n\n        document.addEventListener('keydown', e => {\n            if (pickerIsShown && e.key === 'Escape') {\n                $(pickerInput).popover('hide');\n                pickerInput.focus();\n            }\n        });\n\n        document.addEventListener('focus', e => {\n            if (pickerIsShown && !e.target.closest(SELECTORS.PICKERCONTAINER)) {\n                $(pickerInput).popover('hide');\n            }\n        },\n        true);\n\n        $(pickerInput).on('shown.bs.popover', () => {\n            pickerIsShown = true;\n            // Add class to selected icon, helps to differentiate.\n            if (pickerInput.value != '') {\n                var iconSuggestion = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions');\n                if (iconSuggestion.querySelector('li[data-label=\"' + pickerInput.value + '\"]') !== null) {\n                    // Remove selected class.\n                    iconSuggestion.querySelectorAll('li').forEach((li) =>\n                            li.classList.remove('selected'));\n                    // Assign selected class for new.\n                    iconSuggestion.querySelector('li[data-label=\"' + pickerInput.value + '\"]').classList.add('selected');\n                }\n            }\n        });\n\n        $(pickerInput).on('hide.bs.popover', () => {\n            pickerIsShown = false;\n        });\n\n        pickerInput.addEventListener('keyup', function(e) {\n            filterIcons(e.target);\n        });\n\n    };\n\n    return {\n        init: (target, contextid) => {\n            contextID = contextid;\n            iconPicker(target);\n        }\n\n    };\n});\n"],"names":["define","$","popover","Fragment","Notification","SELECTORS","contextID","pickerIsShown","SELECTBOX","iconPicker","target","document","querySelector","input","createElement","setAttribute","classList","add","value","text","wrapper","append","style","display","parentNode","createElements","pickerInput","loadFragment","then","html","content","placement","customClass","trigger","sanitize","on","querySelectorAll","forEach","li","addEventListener","e","closest","getAttribute","label","catch","exception","key","focus","iconSuggestion","remove","filter","toLowerCase","ul","i","length","includes","filterIcons","setTimeout","init","contextid"],"mappings":"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"}